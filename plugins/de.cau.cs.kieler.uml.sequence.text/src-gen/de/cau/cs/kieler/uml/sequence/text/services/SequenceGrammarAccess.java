/*
* generated by Xtext
*/
package de.cau.cs.kieler.uml.sequence.text.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SequenceGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SequenceDiagramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SequenceDiagram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceDiagramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSequenceDiagramKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDiagramNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDiagramNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cDiagramNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLocalsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLocalsLocalVariableParserRuleCall_3_1_0 = (RuleCall)cLocalsAssignment_3_1.eContents().get(0);
		private final Assignment cLocalsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cLocalsLocalVariableParserRuleCall_3_2_0 = (RuleCall)cLocalsAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cLifelinesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLifelinesLifelineParserRuleCall_4_0 = (RuleCall)cLifelinesAssignment_4.eContents().get(0);
		private final Assignment cInteractionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInteractionsInteractionParserRuleCall_5_0 = (RuleCall)cInteractionsAssignment_5.eContents().get(0);
		
		//SequenceDiagram:
		//	{SequenceDiagram} "sequenceDiagram" diagramName=STRING ("{" locals+=LocalVariable locals+=LocalVariable* "}")?
		//	lifelines+=Lifeline* interactions+=Interaction*;
		public ParserRule getRule() { return rule; }

		//{SequenceDiagram} "sequenceDiagram" diagramName=STRING ("{" locals+=LocalVariable locals+=LocalVariable* "}")?
		//lifelines+=Lifeline* interactions+=Interaction*
		public Group getGroup() { return cGroup; }

		//{SequenceDiagram}
		public Action getSequenceDiagramAction_0() { return cSequenceDiagramAction_0; }

		//"sequenceDiagram"
		public Keyword getSequenceDiagramKeyword_1() { return cSequenceDiagramKeyword_1; }

		//diagramName=STRING
		public Assignment getDiagramNameAssignment_2() { return cDiagramNameAssignment_2; }

		//STRING
		public RuleCall getDiagramNameSTRINGTerminalRuleCall_2_0() { return cDiagramNameSTRINGTerminalRuleCall_2_0; }

		//("{" locals+=LocalVariable locals+=LocalVariable* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//locals+=LocalVariable
		public Assignment getLocalsAssignment_3_1() { return cLocalsAssignment_3_1; }

		//LocalVariable
		public RuleCall getLocalsLocalVariableParserRuleCall_3_1_0() { return cLocalsLocalVariableParserRuleCall_3_1_0; }

		//locals+=LocalVariable*
		public Assignment getLocalsAssignment_3_2() { return cLocalsAssignment_3_2; }

		//LocalVariable
		public RuleCall getLocalsLocalVariableParserRuleCall_3_2_0() { return cLocalsLocalVariableParserRuleCall_3_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }

		//lifelines+=Lifeline*
		public Assignment getLifelinesAssignment_4() { return cLifelinesAssignment_4; }

		//Lifeline
		public RuleCall getLifelinesLifelineParserRuleCall_4_0() { return cLifelinesLifelineParserRuleCall_4_0; }

		//interactions+=Interaction*
		public Assignment getInteractionsAssignment_5() { return cInteractionsAssignment_5; }

		//Interaction
		public RuleCall getInteractionsInteractionParserRuleCall_5_0() { return cInteractionsInteractionParserRuleCall_5_0; }
	}

	public class LocalVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeDataTypeEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//LocalVariable:
		//	type=DataType name=ID;
		public ParserRule getRule() { return rule; }

		//type=DataType name=ID
		public Group getGroup() { return cGroup; }

		//type=DataType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//DataType
		public RuleCall getTypeDataTypeEnumRuleCall_0_0() { return cTypeDataTypeEnumRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class LifelineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Lifeline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLifelineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCaptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCaptionSTRINGTerminalRuleCall_1_0 = (RuleCall)cCaptionAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Lifeline:
		//	"lifeline" caption=STRING "as" name=ID;
		public ParserRule getRule() { return rule; }

		//"lifeline" caption=STRING "as" name=ID
		public Group getGroup() { return cGroup; }

		//"lifeline"
		public Keyword getLifelineKeyword_0() { return cLifelineKeyword_0; }

		//caption=STRING
		public Assignment getCaptionAssignment_1() { return cCaptionAssignment_1; }

		//STRING
		public RuleCall getCaptionSTRINGTerminalRuleCall_1_0() { return cCaptionSTRINGTerminalRuleCall_1_0; }

		//"as"
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Interaction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTwoLifelineMessageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOneLifelineMessageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFragmentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOneLifelineEndBlockParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cOneLifelineNoteParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDestroyLifelineEventParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cRefinementParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Interaction:
		//	TwoLifelineMessage | OneLifelineMessage | Fragment | OneLifelineEndBlock | OneLifelineNote | DestroyLifelineEvent |
		//	Refinement;
		public ParserRule getRule() { return rule; }

		//TwoLifelineMessage | OneLifelineMessage | Fragment | OneLifelineEndBlock | OneLifelineNote | DestroyLifelineEvent |
		//Refinement
		public Alternatives getAlternatives() { return cAlternatives; }

		//TwoLifelineMessage
		public RuleCall getTwoLifelineMessageParserRuleCall_0() { return cTwoLifelineMessageParserRuleCall_0; }

		//OneLifelineMessage
		public RuleCall getOneLifelineMessageParserRuleCall_1() { return cOneLifelineMessageParserRuleCall_1; }

		//Fragment
		public RuleCall getFragmentParserRuleCall_2() { return cFragmentParserRuleCall_2; }

		//OneLifelineEndBlock
		public RuleCall getOneLifelineEndBlockParserRuleCall_3() { return cOneLifelineEndBlockParserRuleCall_3; }

		//OneLifelineNote
		public RuleCall getOneLifelineNoteParserRuleCall_4() { return cOneLifelineNoteParserRuleCall_4; }

		//DestroyLifelineEvent
		public RuleCall getDestroyLifelineEventParserRuleCall_5() { return cDestroyLifelineEventParserRuleCall_5; }

		//Refinement
		public RuleCall getRefinementParserRuleCall_6() { return cRefinementParserRuleCall_6; }
	}

	public class TwoLifelineMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TwoLifelineMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSourceLifelineLifelineCrossReference_0_0 = (CrossReference)cSourceLifelineAssignment_0.eContents().get(0);
		private final RuleCall cSourceLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cSourceLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Assignment cMessageTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMessageTypeMessageTypeEnumRuleCall_1_0 = (RuleCall)cMessageTypeAssignment_1.eContents().get(0);
		private final Assignment cMessageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageSTRINGTerminalRuleCall_2_0 = (RuleCall)cMessageAssignment_2.eContents().get(0);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetLifelineAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTargetLifelineLifelineCrossReference_4_0 = (CrossReference)cTargetLifelineAssignment_4.eContents().get(0);
		private final RuleCall cTargetLifelineLifelineIDTerminalRuleCall_4_0_1 = (RuleCall)cTargetLifelineLifelineCrossReference_4_0.eContents().get(1);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cSourceStartBlockAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final Keyword cSourceStartBlockSourceStartBlockKeyword_5_0_0 = (Keyword)cSourceStartBlockAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Assignment cSourceEndBlockAssignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final Keyword cSourceEndBlockSourceEndBlockKeyword_5_1_0_0 = (Keyword)cSourceEndBlockAssignment_5_1_0.eContents().get(0);
		private final Assignment cSourceEndBlockCountAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cSourceEndBlockCountINT_GREATER_ZEROTerminalRuleCall_5_1_1_0 = (RuleCall)cSourceEndBlockCountAssignment_5_1_1.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cTargetStartBlockAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final Keyword cTargetStartBlockTargetStartBlockKeyword_6_0_0 = (Keyword)cTargetStartBlockAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Assignment cTargetEndBlockAssignment_6_1_0 = (Assignment)cGroup_6_1.eContents().get(0);
		private final Keyword cTargetEndBlockTargetEndBlockKeyword_6_1_0_0 = (Keyword)cTargetEndBlockAssignment_6_1_0.eContents().get(0);
		private final Assignment cTargetEndBlockCountAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cTargetEndBlockCountINT_GREATER_ZEROTerminalRuleCall_6_1_1_0 = (RuleCall)cTargetEndBlockCountAssignment_6_1_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSourceNoteKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSourceNoteAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSourceNoteSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cSourceNoteAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cTargetNoteKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTargetNoteAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTargetNoteSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cTargetNoteAssignment_8_1.eContents().get(0);
		
		//TwoLifelineMessage:
		//	sourceLifeline=[Lifeline] messageType=MessageType message=STRING "to" targetLifeline=[Lifeline]
		//	(sourceStartBlock?="sourceStartBlock" | sourceEndBlock?="sourceEndBlock" sourceEndBlockCount=INT_GREATER_ZERO?)?
		//	(targetStartBlock?="targetStartBlock" | targetEndBlock?="targetEndBlock" targetEndBlockCount=INT_GREATER_ZERO?)?
		//	("sourceNote" sourceNote=STRING)? ("targetNote" targetNote=STRING)?;
		public ParserRule getRule() { return rule; }

		//sourceLifeline=[Lifeline] messageType=MessageType message=STRING "to" targetLifeline=[Lifeline]
		//(sourceStartBlock?="sourceStartBlock" | sourceEndBlock?="sourceEndBlock" sourceEndBlockCount=INT_GREATER_ZERO?)?
		//(targetStartBlock?="targetStartBlock" | targetEndBlock?="targetEndBlock" targetEndBlockCount=INT_GREATER_ZERO?)?
		//("sourceNote" sourceNote=STRING)? ("targetNote" targetNote=STRING)?
		public Group getGroup() { return cGroup; }

		//sourceLifeline=[Lifeline]
		public Assignment getSourceLifelineAssignment_0() { return cSourceLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getSourceLifelineLifelineCrossReference_0_0() { return cSourceLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getSourceLifelineLifelineIDTerminalRuleCall_0_0_1() { return cSourceLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//messageType=MessageType
		public Assignment getMessageTypeAssignment_1() { return cMessageTypeAssignment_1; }

		//MessageType
		public RuleCall getMessageTypeMessageTypeEnumRuleCall_1_0() { return cMessageTypeMessageTypeEnumRuleCall_1_0; }

		//message=STRING
		public Assignment getMessageAssignment_2() { return cMessageAssignment_2; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_2_0() { return cMessageSTRINGTerminalRuleCall_2_0; }

		//"to"
		public Keyword getToKeyword_3() { return cToKeyword_3; }

		//targetLifeline=[Lifeline]
		public Assignment getTargetLifelineAssignment_4() { return cTargetLifelineAssignment_4; }

		//[Lifeline]
		public CrossReference getTargetLifelineLifelineCrossReference_4_0() { return cTargetLifelineLifelineCrossReference_4_0; }

		//ID
		public RuleCall getTargetLifelineLifelineIDTerminalRuleCall_4_0_1() { return cTargetLifelineLifelineIDTerminalRuleCall_4_0_1; }

		//(sourceStartBlock?="sourceStartBlock" | sourceEndBlock?="sourceEndBlock" sourceEndBlockCount=INT_GREATER_ZERO?)?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//sourceStartBlock?="sourceStartBlock"
		public Assignment getSourceStartBlockAssignment_5_0() { return cSourceStartBlockAssignment_5_0; }

		//"sourceStartBlock"
		public Keyword getSourceStartBlockSourceStartBlockKeyword_5_0_0() { return cSourceStartBlockSourceStartBlockKeyword_5_0_0; }

		//sourceEndBlock?="sourceEndBlock" sourceEndBlockCount=INT_GREATER_ZERO?
		public Group getGroup_5_1() { return cGroup_5_1; }

		//sourceEndBlock?="sourceEndBlock"
		public Assignment getSourceEndBlockAssignment_5_1_0() { return cSourceEndBlockAssignment_5_1_0; }

		//"sourceEndBlock"
		public Keyword getSourceEndBlockSourceEndBlockKeyword_5_1_0_0() { return cSourceEndBlockSourceEndBlockKeyword_5_1_0_0; }

		//sourceEndBlockCount=INT_GREATER_ZERO?
		public Assignment getSourceEndBlockCountAssignment_5_1_1() { return cSourceEndBlockCountAssignment_5_1_1; }

		//INT_GREATER_ZERO
		public RuleCall getSourceEndBlockCountINT_GREATER_ZEROTerminalRuleCall_5_1_1_0() { return cSourceEndBlockCountINT_GREATER_ZEROTerminalRuleCall_5_1_1_0; }

		//(targetStartBlock?="targetStartBlock" | targetEndBlock?="targetEndBlock" targetEndBlockCount=INT_GREATER_ZERO?)?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//targetStartBlock?="targetStartBlock"
		public Assignment getTargetStartBlockAssignment_6_0() { return cTargetStartBlockAssignment_6_0; }

		//"targetStartBlock"
		public Keyword getTargetStartBlockTargetStartBlockKeyword_6_0_0() { return cTargetStartBlockTargetStartBlockKeyword_6_0_0; }

		//targetEndBlock?="targetEndBlock" targetEndBlockCount=INT_GREATER_ZERO?
		public Group getGroup_6_1() { return cGroup_6_1; }

		//targetEndBlock?="targetEndBlock"
		public Assignment getTargetEndBlockAssignment_6_1_0() { return cTargetEndBlockAssignment_6_1_0; }

		//"targetEndBlock"
		public Keyword getTargetEndBlockTargetEndBlockKeyword_6_1_0_0() { return cTargetEndBlockTargetEndBlockKeyword_6_1_0_0; }

		//targetEndBlockCount=INT_GREATER_ZERO?
		public Assignment getTargetEndBlockCountAssignment_6_1_1() { return cTargetEndBlockCountAssignment_6_1_1; }

		//INT_GREATER_ZERO
		public RuleCall getTargetEndBlockCountINT_GREATER_ZEROTerminalRuleCall_6_1_1_0() { return cTargetEndBlockCountINT_GREATER_ZEROTerminalRuleCall_6_1_1_0; }

		//("sourceNote" sourceNote=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"sourceNote"
		public Keyword getSourceNoteKeyword_7_0() { return cSourceNoteKeyword_7_0; }

		//sourceNote=STRING
		public Assignment getSourceNoteAssignment_7_1() { return cSourceNoteAssignment_7_1; }

		//STRING
		public RuleCall getSourceNoteSTRINGTerminalRuleCall_7_1_0() { return cSourceNoteSTRINGTerminalRuleCall_7_1_0; }

		//("targetNote" targetNote=STRING)?
		public Group getGroup_8() { return cGroup_8; }

		//"targetNote"
		public Keyword getTargetNoteKeyword_8_0() { return cTargetNoteKeyword_8_0; }

		//targetNote=STRING
		public Assignment getTargetNoteAssignment_8_1() { return cTargetNoteAssignment_8_1; }

		//STRING
		public RuleCall getTargetNoteSTRINGTerminalRuleCall_8_1_0() { return cTargetNoteSTRINGTerminalRuleCall_8_1_0; }
	}

	public class OneLifelineMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OneLifelineMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLifelineLifelineCrossReference_0_0 = (CrossReference)cLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Assignment cMessageTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cMessageTypeAlternatives_1_0 = (Alternatives)cMessageTypeAssignment_1.eContents().get(0);
		private final Keyword cMessageTypeLostKeyword_1_0_0 = (Keyword)cMessageTypeAlternatives_1_0.eContents().get(0);
		private final Keyword cMessageTypeFoundKeyword_1_0_1 = (Keyword)cMessageTypeAlternatives_1_0.eContents().get(1);
		private final Assignment cCaptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCaptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cCaptionAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cStartBlockAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final Keyword cStartBlockStartBlockKeyword_3_0_0 = (Keyword)cStartBlockAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cEndBlockAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final Keyword cEndBlockEndBlockKeyword_3_1_0_0 = (Keyword)cEndBlockAssignment_3_1_0.eContents().get(0);
		private final Assignment cEndBlockCountAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cEndBlockCountINT_GREATER_ZEROTerminalRuleCall_3_1_1_0 = (RuleCall)cEndBlockCountAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNoteKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNoteAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNoteSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cNoteAssignment_4_1.eContents().get(0);
		
		//OneLifelineMessage:
		//	Lifeline=[Lifeline] messageType=("lost" | "found") caption=STRING (startBlock?="startBlock" | endBlock?="endBlock"
		//	endBlockCount=INT_GREATER_ZERO?)? ("note" note=STRING)?;
		public ParserRule getRule() { return rule; }

		//Lifeline=[Lifeline] messageType=("lost" | "found") caption=STRING (startBlock?="startBlock" | endBlock?="endBlock"
		//endBlockCount=INT_GREATER_ZERO?)? ("note" note=STRING)?
		public Group getGroup() { return cGroup; }

		//Lifeline=[Lifeline]
		public Assignment getLifelineAssignment_0() { return cLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getLifelineLifelineCrossReference_0_0() { return cLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getLifelineLifelineIDTerminalRuleCall_0_0_1() { return cLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//messageType=("lost" | "found")
		public Assignment getMessageTypeAssignment_1() { return cMessageTypeAssignment_1; }

		//"lost" | "found"
		public Alternatives getMessageTypeAlternatives_1_0() { return cMessageTypeAlternatives_1_0; }

		//"lost"
		public Keyword getMessageTypeLostKeyword_1_0_0() { return cMessageTypeLostKeyword_1_0_0; }

		//"found"
		public Keyword getMessageTypeFoundKeyword_1_0_1() { return cMessageTypeFoundKeyword_1_0_1; }

		//caption=STRING
		public Assignment getCaptionAssignment_2() { return cCaptionAssignment_2; }

		//STRING
		public RuleCall getCaptionSTRINGTerminalRuleCall_2_0() { return cCaptionSTRINGTerminalRuleCall_2_0; }

		//(startBlock?="startBlock" | endBlock?="endBlock" endBlockCount=INT_GREATER_ZERO?)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//startBlock?="startBlock"
		public Assignment getStartBlockAssignment_3_0() { return cStartBlockAssignment_3_0; }

		//"startBlock"
		public Keyword getStartBlockStartBlockKeyword_3_0_0() { return cStartBlockStartBlockKeyword_3_0_0; }

		//endBlock?="endBlock" endBlockCount=INT_GREATER_ZERO?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//endBlock?="endBlock"
		public Assignment getEndBlockAssignment_3_1_0() { return cEndBlockAssignment_3_1_0; }

		//"endBlock"
		public Keyword getEndBlockEndBlockKeyword_3_1_0_0() { return cEndBlockEndBlockKeyword_3_1_0_0; }

		//endBlockCount=INT_GREATER_ZERO?
		public Assignment getEndBlockCountAssignment_3_1_1() { return cEndBlockCountAssignment_3_1_1; }

		//INT_GREATER_ZERO
		public RuleCall getEndBlockCountINT_GREATER_ZEROTerminalRuleCall_3_1_1_0() { return cEndBlockCountINT_GREATER_ZEROTerminalRuleCall_3_1_1_0; }

		//("note" note=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"note"
		public Keyword getNoteKeyword_4_0() { return cNoteKeyword_4_0; }

		//note=STRING
		public Assignment getNoteAssignment_4_1() { return cNoteAssignment_4_1; }

		//STRING
		public RuleCall getNoteSTRINGTerminalRuleCall_4_1_0() { return cNoteSTRINGTerminalRuleCall_4_1_0; }
	}

	public class OneLifelineEndBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OneLifelineEndBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLifelineLifelineCrossReference_0_0 = (CrossReference)cLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Keyword cEndBlockKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEndBlockCountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEndBlockCountINT_GREATER_ZEROTerminalRuleCall_2_0 = (RuleCall)cEndBlockCountAssignment_2.eContents().get(0);
		
		//OneLifelineEndBlock:
		//	Lifeline=[Lifeline] "endBlock" endBlockCount=INT_GREATER_ZERO?;
		public ParserRule getRule() { return rule; }

		//Lifeline=[Lifeline] "endBlock" endBlockCount=INT_GREATER_ZERO?
		public Group getGroup() { return cGroup; }

		//Lifeline=[Lifeline]
		public Assignment getLifelineAssignment_0() { return cLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getLifelineLifelineCrossReference_0_0() { return cLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getLifelineLifelineIDTerminalRuleCall_0_0_1() { return cLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//"endBlock"
		public Keyword getEndBlockKeyword_1() { return cEndBlockKeyword_1; }

		//endBlockCount=INT_GREATER_ZERO?
		public Assignment getEndBlockCountAssignment_2() { return cEndBlockCountAssignment_2; }

		//INT_GREATER_ZERO
		public RuleCall getEndBlockCountINT_GREATER_ZEROTerminalRuleCall_2_0() { return cEndBlockCountINT_GREATER_ZEROTerminalRuleCall_2_0; }
	}

	public class OneLifelineNoteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OneLifelineNote");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLifelineLifelineCrossReference_0_0 = (CrossReference)cLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Keyword cNoteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNoteAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNoteSTRINGTerminalRuleCall_2_0 = (RuleCall)cNoteAssignment_2.eContents().get(0);
		
		//OneLifelineNote:
		//	Lifeline=[Lifeline] "note" note=STRING;
		public ParserRule getRule() { return rule; }

		//Lifeline=[Lifeline] "note" note=STRING
		public Group getGroup() { return cGroup; }

		//Lifeline=[Lifeline]
		public Assignment getLifelineAssignment_0() { return cLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getLifelineLifelineCrossReference_0_0() { return cLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getLifelineLifelineIDTerminalRuleCall_0_0_1() { return cLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//"note"
		public Keyword getNoteKeyword_1() { return cNoteKeyword_1; }

		//note=STRING
		public Assignment getNoteAssignment_2() { return cNoteAssignment_2; }

		//STRING
		public RuleCall getNoteSTRINGTerminalRuleCall_2_0() { return cNoteSTRINGTerminalRuleCall_2_0; }
	}

	public class DestroyLifelineEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DestroyLifelineEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLifelineLifelineCrossReference_0_0 = (CrossReference)cLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Keyword cDestroyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//DestroyLifelineEvent:
		//	Lifeline=[Lifeline] "destroy";
		public ParserRule getRule() { return rule; }

		//Lifeline=[Lifeline] "destroy"
		public Group getGroup() { return cGroup; }

		//Lifeline=[Lifeline]
		public Assignment getLifelineAssignment_0() { return cLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getLifelineLifelineCrossReference_0_0() { return cLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getLifelineLifelineIDTerminalRuleCall_0_0_1() { return cLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//"destroy"
		public Keyword getDestroyKeyword_1() { return cDestroyKeyword_1; }
	}

	public class FragmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Fragment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFragmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cSectionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSectionsSectionParserRuleCall_2_0 = (RuleCall)cSectionsAssignment_2.eContents().get(0);
		private final Assignment cSectionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSectionsSectionParserRuleCall_3_0 = (RuleCall)cSectionsAssignment_3.eContents().get(0);
		
		//Fragment:
		//	"fragment" name=STRING sections+=Section sections+=Section*;
		public ParserRule getRule() { return rule; }

		//"fragment" name=STRING sections+=Section sections+=Section*
		public Group getGroup() { return cGroup; }

		//"fragment"
		public Keyword getFragmentKeyword_0() { return cFragmentKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_2() { return cSectionsAssignment_2; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_2_0() { return cSectionsSectionParserRuleCall_2_0; }

		//sections+=Section*
		public Assignment getSectionsAssignment_3() { return cSectionsAssignment_3; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_3_0() { return cSectionsSectionParserRuleCall_3_0; }
	}

	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLabelKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLabelAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLabelSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cLabelAssignment_1_1.eContents().get(0);
		private final Assignment cInteractionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInteractionsInteractionParserRuleCall_2_0 = (RuleCall)cInteractionsAssignment_2.eContents().get(0);
		private final Assignment cInteractionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteractionsInteractionParserRuleCall_3_0 = (RuleCall)cInteractionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Section:
		//	"{" ("label" label=STRING)? interactions+=Interaction interactions+=Interaction* "}";
		public ParserRule getRule() { return rule; }

		//"{" ("label" label=STRING)? interactions+=Interaction interactions+=Interaction* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//("label" label=STRING)?
		public Group getGroup_1() { return cGroup_1; }

		//"label"
		public Keyword getLabelKeyword_1_0() { return cLabelKeyword_1_0; }

		//label=STRING
		public Assignment getLabelAssignment_1_1() { return cLabelAssignment_1_1; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_1_1_0() { return cLabelSTRINGTerminalRuleCall_1_1_0; }

		//interactions+=Interaction
		public Assignment getInteractionsAssignment_2() { return cInteractionsAssignment_2; }

		//Interaction
		public RuleCall getInteractionsInteractionParserRuleCall_2_0() { return cInteractionsInteractionParserRuleCall_2_0; }

		//interactions+=Interaction*
		public Assignment getInteractionsAssignment_3() { return cInteractionsAssignment_3; }

		//Interaction
		public RuleCall getInteractionsInteractionParserRuleCall_3_0() { return cInteractionsInteractionParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RefinementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Refinement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefinementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLabelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelSTRINGTerminalRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		private final Keyword cLifelinesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLifelinesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cLifelinesLifelineCrossReference_4_0 = (CrossReference)cLifelinesAssignment_4.eContents().get(0);
		private final RuleCall cLifelinesLifelineIDTerminalRuleCall_4_0_1 = (RuleCall)cLifelinesLifelineCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLifelinesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cLifelinesLifelineCrossReference_5_1_0 = (CrossReference)cLifelinesAssignment_5_1.eContents().get(0);
		private final RuleCall cLifelinesLifelineIDTerminalRuleCall_5_1_0_1 = (RuleCall)cLifelinesLifelineCrossReference_5_1_0.eContents().get(1);
		
		//Refinement:
		//	"refinement" "label" label=STRING "lifelines" lifelines+=[Lifeline] ("," lifelines+=[Lifeline])*;
		public ParserRule getRule() { return rule; }

		//"refinement" "label" label=STRING "lifelines" lifelines+=[Lifeline] ("," lifelines+=[Lifeline])*
		public Group getGroup() { return cGroup; }

		//"refinement"
		public Keyword getRefinementKeyword_0() { return cRefinementKeyword_0; }

		//"label"
		public Keyword getLabelKeyword_1() { return cLabelKeyword_1; }

		//label=STRING
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_2_0() { return cLabelSTRINGTerminalRuleCall_2_0; }

		//"lifelines"
		public Keyword getLifelinesKeyword_3() { return cLifelinesKeyword_3; }

		//lifelines+=[Lifeline]
		public Assignment getLifelinesAssignment_4() { return cLifelinesAssignment_4; }

		//[Lifeline]
		public CrossReference getLifelinesLifelineCrossReference_4_0() { return cLifelinesLifelineCrossReference_4_0; }

		//ID
		public RuleCall getLifelinesLifelineIDTerminalRuleCall_4_0_1() { return cLifelinesLifelineIDTerminalRuleCall_4_0_1; }

		//("," lifelines+=[Lifeline])*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//lifelines+=[Lifeline]
		public Assignment getLifelinesAssignment_5_1() { return cLifelinesAssignment_5_1; }

		//[Lifeline]
		public CrossReference getLifelinesLifelineCrossReference_5_1_0() { return cLifelinesLifelineCrossReference_5_1_0; }

		//ID
		public RuleCall getLifelinesLifelineIDTerminalRuleCall_5_1_0_1() { return cLifelinesLifelineIDTerminalRuleCall_5_1_0_1; }
	}
	
	
	public class MessageTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "MessageType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAsyncEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAsyncAsyncKeyword_0_0 = (Keyword)cAsyncEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCreateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCreateCreateKeyword_1_0 = (Keyword)cCreateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cResponseEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cResponseResponseKeyword_2_0 = (Keyword)cResponseEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSyncEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSyncSyncKeyword_3_0 = (Keyword)cSyncEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum MessageType:
		//	async | create | response | sync;
		public EnumRule getRule() { return rule; }

		//async | create | response | sync
		public Alternatives getAlternatives() { return cAlternatives; }

		//async
		public EnumLiteralDeclaration getAsyncEnumLiteralDeclaration_0() { return cAsyncEnumLiteralDeclaration_0; }

		//"async"
		public Keyword getAsyncAsyncKeyword_0_0() { return cAsyncAsyncKeyword_0_0; }

		//create
		public EnumLiteralDeclaration getCreateEnumLiteralDeclaration_1() { return cCreateEnumLiteralDeclaration_1; }

		//"create"
		public Keyword getCreateCreateKeyword_1_0() { return cCreateCreateKeyword_1_0; }

		//response
		public EnumLiteralDeclaration getResponseEnumLiteralDeclaration_2() { return cResponseEnumLiteralDeclaration_2; }

		//"response"
		public Keyword getResponseResponseKeyword_2_0() { return cResponseResponseKeyword_2_0; }

		//sync
		public EnumLiteralDeclaration getSyncEnumLiteralDeclaration_3() { return cSyncEnumLiteralDeclaration_3; }

		//"sync"
		public Keyword getSyncSyncKeyword_3_0() { return cSyncSyncKeyword_3_0; }
	}

	public class DataTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCharEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCharCharKeyword_0_0 = (Keyword)cCharEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBooleanBooleanKeyword_1_0 = (Keyword)cBooleanEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cIntegerIntegerKeyword_2_0 = (Keyword)cIntegerEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFloatFloatKeyword_3_0 = (Keyword)cFloatEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum DataType:
		//	char="Char" | boolean="Boolean" | integer="Integer" | float="Float";
		public EnumRule getRule() { return rule; }

		//char="Char" | boolean="Boolean" | integer="Integer" | float="Float"
		public Alternatives getAlternatives() { return cAlternatives; }

		//char="Char"
		public EnumLiteralDeclaration getCharEnumLiteralDeclaration_0() { return cCharEnumLiteralDeclaration_0; }

		//"Char"
		public Keyword getCharCharKeyword_0_0() { return cCharCharKeyword_0_0; }

		//boolean="Boolean"
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_1() { return cBooleanEnumLiteralDeclaration_1; }

		//"Boolean"
		public Keyword getBooleanBooleanKeyword_1_0() { return cBooleanBooleanKeyword_1_0; }

		//integer="Integer"
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_2() { return cIntegerEnumLiteralDeclaration_2; }

		//"Integer"
		public Keyword getIntegerIntegerKeyword_2_0() { return cIntegerIntegerKeyword_2_0; }

		//float="Float"
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_3() { return cFloatEnumLiteralDeclaration_3; }

		//"Float"
		public Keyword getFloatFloatKeyword_3_0() { return cFloatFloatKeyword_3_0; }
	}
	
	private final SequenceDiagramElements pSequenceDiagram;
	private final LocalVariableElements pLocalVariable;
	private final LifelineElements pLifeline;
	private final InteractionElements pInteraction;
	private final TwoLifelineMessageElements pTwoLifelineMessage;
	private final OneLifelineMessageElements pOneLifelineMessage;
	private final OneLifelineEndBlockElements pOneLifelineEndBlock;
	private final OneLifelineNoteElements pOneLifelineNote;
	private final DestroyLifelineEventElements pDestroyLifelineEvent;
	private final FragmentElements pFragment;
	private final SectionElements pSection;
	private final RefinementElements pRefinement;
	private final MessageTypeElements unknownRuleMessageType;
	private final DataTypeElements unknownRuleDataType;
	private final TerminalRule tINT_GREATER_ZERO;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SequenceGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSequenceDiagram = new SequenceDiagramElements();
		this.pLocalVariable = new LocalVariableElements();
		this.pLifeline = new LifelineElements();
		this.pInteraction = new InteractionElements();
		this.pTwoLifelineMessage = new TwoLifelineMessageElements();
		this.pOneLifelineMessage = new OneLifelineMessageElements();
		this.pOneLifelineEndBlock = new OneLifelineEndBlockElements();
		this.pOneLifelineNote = new OneLifelineNoteElements();
		this.pDestroyLifelineEvent = new DestroyLifelineEventElements();
		this.pFragment = new FragmentElements();
		this.pSection = new SectionElements();
		this.pRefinement = new RefinementElements();
		this.unknownRuleMessageType = new MessageTypeElements();
		this.unknownRuleDataType = new DataTypeElements();
		this.tINT_GREATER_ZERO = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT_GREATER_ZERO");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cau.cs.kieler.uml.sequence.text.Sequence".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//SequenceDiagram:
	//	{SequenceDiagram} "sequenceDiagram" diagramName=STRING ("{" locals+=LocalVariable locals+=LocalVariable* "}")?
	//	lifelines+=Lifeline* interactions+=Interaction*;
	public SequenceDiagramElements getSequenceDiagramAccess() {
		return pSequenceDiagram;
	}
	
	public ParserRule getSequenceDiagramRule() {
		return getSequenceDiagramAccess().getRule();
	}

	//LocalVariable:
	//	type=DataType name=ID;
	public LocalVariableElements getLocalVariableAccess() {
		return pLocalVariable;
	}
	
	public ParserRule getLocalVariableRule() {
		return getLocalVariableAccess().getRule();
	}

	//Lifeline:
	//	"lifeline" caption=STRING "as" name=ID;
	public LifelineElements getLifelineAccess() {
		return pLifeline;
	}
	
	public ParserRule getLifelineRule() {
		return getLifelineAccess().getRule();
	}

	//Interaction:
	//	TwoLifelineMessage | OneLifelineMessage | Fragment | OneLifelineEndBlock | OneLifelineNote | DestroyLifelineEvent |
	//	Refinement;
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}

	//TwoLifelineMessage:
	//	sourceLifeline=[Lifeline] messageType=MessageType message=STRING "to" targetLifeline=[Lifeline]
	//	(sourceStartBlock?="sourceStartBlock" | sourceEndBlock?="sourceEndBlock" sourceEndBlockCount=INT_GREATER_ZERO?)?
	//	(targetStartBlock?="targetStartBlock" | targetEndBlock?="targetEndBlock" targetEndBlockCount=INT_GREATER_ZERO?)?
	//	("sourceNote" sourceNote=STRING)? ("targetNote" targetNote=STRING)?;
	public TwoLifelineMessageElements getTwoLifelineMessageAccess() {
		return pTwoLifelineMessage;
	}
	
	public ParserRule getTwoLifelineMessageRule() {
		return getTwoLifelineMessageAccess().getRule();
	}

	//OneLifelineMessage:
	//	Lifeline=[Lifeline] messageType=("lost" | "found") caption=STRING (startBlock?="startBlock" | endBlock?="endBlock"
	//	endBlockCount=INT_GREATER_ZERO?)? ("note" note=STRING)?;
	public OneLifelineMessageElements getOneLifelineMessageAccess() {
		return pOneLifelineMessage;
	}
	
	public ParserRule getOneLifelineMessageRule() {
		return getOneLifelineMessageAccess().getRule();
	}

	//OneLifelineEndBlock:
	//	Lifeline=[Lifeline] "endBlock" endBlockCount=INT_GREATER_ZERO?;
	public OneLifelineEndBlockElements getOneLifelineEndBlockAccess() {
		return pOneLifelineEndBlock;
	}
	
	public ParserRule getOneLifelineEndBlockRule() {
		return getOneLifelineEndBlockAccess().getRule();
	}

	//OneLifelineNote:
	//	Lifeline=[Lifeline] "note" note=STRING;
	public OneLifelineNoteElements getOneLifelineNoteAccess() {
		return pOneLifelineNote;
	}
	
	public ParserRule getOneLifelineNoteRule() {
		return getOneLifelineNoteAccess().getRule();
	}

	//DestroyLifelineEvent:
	//	Lifeline=[Lifeline] "destroy";
	public DestroyLifelineEventElements getDestroyLifelineEventAccess() {
		return pDestroyLifelineEvent;
	}
	
	public ParserRule getDestroyLifelineEventRule() {
		return getDestroyLifelineEventAccess().getRule();
	}

	//Fragment:
	//	"fragment" name=STRING sections+=Section sections+=Section*;
	public FragmentElements getFragmentAccess() {
		return pFragment;
	}
	
	public ParserRule getFragmentRule() {
		return getFragmentAccess().getRule();
	}

	//Section:
	//	"{" ("label" label=STRING)? interactions+=Interaction interactions+=Interaction* "}";
	public SectionElements getSectionAccess() {
		return pSection;
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}

	//Refinement:
	//	"refinement" "label" label=STRING "lifelines" lifelines+=[Lifeline] ("," lifelines+=[Lifeline])*;
	public RefinementElements getRefinementAccess() {
		return pRefinement;
	}
	
	public ParserRule getRefinementRule() {
		return getRefinementAccess().getRule();
	}

	//enum MessageType:
	//	async | create | response | sync;
	public MessageTypeElements getMessageTypeAccess() {
		return unknownRuleMessageType;
	}
	
	public EnumRule getMessageTypeRule() {
		return getMessageTypeAccess().getRule();
	}

	//enum DataType:
	//	char="Char" | boolean="Boolean" | integer="Integer" | float="Float";
	public DataTypeElements getDataTypeAccess() {
		return unknownRuleDataType;
	}
	
	public EnumRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}

	//terminal INT_GREATER_ZERO returns ecore::EInt:
	//	"1".."9" "0".."9"* | "all";
	public TerminalRule getINT_GREATER_ZERORule() {
		return tINT_GREATER_ZERO;
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
