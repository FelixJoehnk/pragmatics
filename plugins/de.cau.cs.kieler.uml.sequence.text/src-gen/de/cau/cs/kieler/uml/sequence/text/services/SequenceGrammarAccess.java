/*
* generated by Xtext
*/
package de.cau.cs.kieler.uml.sequence.text.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SequenceGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SequenceDiagramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SequenceDiagram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceDiagramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSequenceDiagramKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDiagramNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDiagramNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cDiagramNameAssignment_2.eContents().get(0);
		private final Assignment cLifelinesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLifelinesLifelineParserRuleCall_3_0 = (RuleCall)cLifelinesAssignment_3.eContents().get(0);
		private final Assignment cInteractionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInteractionsInteractionParserRuleCall_4_0 = (RuleCall)cInteractionsAssignment_4.eContents().get(0);
		
		//SequenceDiagram:
		//	{SequenceDiagram} "sequenceDiagram" diagramName= //('{' locals+=LocalVariable (locals+=LocalVariable)* '}')?
		//	STRING lifelines+=Lifeline* interactions+=Interaction*;
		public ParserRule getRule() { return rule; }

		//{SequenceDiagram} "sequenceDiagram" diagramName= //('{' locals+=LocalVariable (locals+=LocalVariable)* '}')?
		//STRING lifelines+=Lifeline* interactions+=Interaction*
		public Group getGroup() { return cGroup; }

		//{SequenceDiagram}
		public Action getSequenceDiagramAction_0() { return cSequenceDiagramAction_0; }

		//"sequenceDiagram"
		public Keyword getSequenceDiagramKeyword_1() { return cSequenceDiagramKeyword_1; }

		//diagramName= //('{' locals+=LocalVariable (locals+=LocalVariable)* '}')?
		//STRING
		public Assignment getDiagramNameAssignment_2() { return cDiagramNameAssignment_2; }

		////('{' locals+=LocalVariable (locals+=LocalVariable)* '}')?
		//STRING
		public RuleCall getDiagramNameSTRINGTerminalRuleCall_2_0() { return cDiagramNameSTRINGTerminalRuleCall_2_0; }

		//lifelines+=Lifeline*
		public Assignment getLifelinesAssignment_3() { return cLifelinesAssignment_3; }

		//Lifeline
		public RuleCall getLifelinesLifelineParserRuleCall_3_0() { return cLifelinesLifelineParserRuleCall_3_0; }

		//interactions+=Interaction*
		public Assignment getInteractionsAssignment_4() { return cInteractionsAssignment_4; }

		//Interaction
		public RuleCall getInteractionsInteractionParserRuleCall_4_0() { return cInteractionsInteractionParserRuleCall_4_0; }
	}

	public class LifelineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Lifeline");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLifelineKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cCaptionAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cCaptionSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cCaptionAssignment_0_1.eContents().get(0);
		private final Keyword cAsKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cNameAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_0_3_0 = (RuleCall)cNameAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cUsecaseKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cUsecaseCaptionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cUsecaseCaptionSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cUsecaseCaptionAssignment_1_1.eContents().get(0);
		private final Keyword cAsKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cNameAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_1_3_0 = (RuleCall)cNameAssignment_1_3.eContents().get(0);
		
		////LocalVariable returns LocalVariable:
		////    type=DataType name=ID;
		//Lifeline:
		//	"lifeline" caption=STRING "as" name=ID | "usecase" usecaseCaption=STRING "as" name=ID;
		public ParserRule getRule() { return rule; }

		//"lifeline" caption=STRING "as" name=ID | "usecase" usecaseCaption=STRING "as" name=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//"lifeline" caption=STRING "as" name=ID
		public Group getGroup_0() { return cGroup_0; }

		//"lifeline"
		public Keyword getLifelineKeyword_0_0() { return cLifelineKeyword_0_0; }

		//caption=STRING
		public Assignment getCaptionAssignment_0_1() { return cCaptionAssignment_0_1; }

		//STRING
		public RuleCall getCaptionSTRINGTerminalRuleCall_0_1_0() { return cCaptionSTRINGTerminalRuleCall_0_1_0; }

		//"as"
		public Keyword getAsKeyword_0_2() { return cAsKeyword_0_2; }

		//name=ID
		public Assignment getNameAssignment_0_3() { return cNameAssignment_0_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_3_0() { return cNameIDTerminalRuleCall_0_3_0; }

		//"usecase" usecaseCaption=STRING "as" name=ID
		public Group getGroup_1() { return cGroup_1; }

		//"usecase"
		public Keyword getUsecaseKeyword_1_0() { return cUsecaseKeyword_1_0; }

		//usecaseCaption=STRING
		public Assignment getUsecaseCaptionAssignment_1_1() { return cUsecaseCaptionAssignment_1_1; }

		//STRING
		public RuleCall getUsecaseCaptionSTRINGTerminalRuleCall_1_1_0() { return cUsecaseCaptionSTRINGTerminalRuleCall_1_1_0; }

		//"as"
		public Keyword getAsKeyword_1_2() { return cAsKeyword_1_2; }

		//name=ID
		public Assignment getNameAssignment_1_3() { return cNameAssignment_1_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_3_0() { return cNameIDTerminalRuleCall_1_3_0; }
	}

	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Interaction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTwoLifelineMessageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOneLifelineMessageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFragmentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOneLifelineNoteParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSelfMessageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDestroyLifelineEventParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cRefinementParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Interaction:
		//	TwoLifelineMessage | OneLifelineMessage | Fragment | OneLifelineNote | SelfMessage | DestroyLifelineEvent |
		//	Refinement;
		public ParserRule getRule() { return rule; }

		//TwoLifelineMessage | OneLifelineMessage | Fragment | OneLifelineNote | SelfMessage | DestroyLifelineEvent | Refinement
		public Alternatives getAlternatives() { return cAlternatives; }

		//TwoLifelineMessage
		public RuleCall getTwoLifelineMessageParserRuleCall_0() { return cTwoLifelineMessageParserRuleCall_0; }

		//OneLifelineMessage
		public RuleCall getOneLifelineMessageParserRuleCall_1() { return cOneLifelineMessageParserRuleCall_1; }

		//Fragment
		public RuleCall getFragmentParserRuleCall_2() { return cFragmentParserRuleCall_2; }

		//OneLifelineNote
		public RuleCall getOneLifelineNoteParserRuleCall_3() { return cOneLifelineNoteParserRuleCall_3; }

		//SelfMessage
		public RuleCall getSelfMessageParserRuleCall_4() { return cSelfMessageParserRuleCall_4; }

		//DestroyLifelineEvent
		public RuleCall getDestroyLifelineEventParserRuleCall_5() { return cDestroyLifelineEventParserRuleCall_5; }

		//Refinement
		public RuleCall getRefinementParserRuleCall_6() { return cRefinementParserRuleCall_6; }
	}

	public class TwoLifelineMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TwoLifelineMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSourceLifelineLifelineCrossReference_0_0 = (CrossReference)cSourceLifelineAssignment_0.eContents().get(0);
		private final RuleCall cSourceLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cSourceLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Assignment cMessageTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMessageTypeMessageTypeEnumRuleCall_1_0 = (RuleCall)cMessageTypeAssignment_1.eContents().get(0);
		private final Assignment cMessageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageSTRINGTerminalRuleCall_2_0 = (RuleCall)cMessageAssignment_2.eContents().get(0);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetLifelineAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTargetLifelineLifelineCrossReference_4_0 = (CrossReference)cTargetLifelineAssignment_4.eContents().get(0);
		private final RuleCall cTargetLifelineLifelineIDTerminalRuleCall_4_0_1 = (RuleCall)cTargetLifelineLifelineCrossReference_4_0.eContents().get(1);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cSourceStartEndExecAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final Keyword cSourceStartEndExecSourceStartEndExecKeyword_5_0_0 = (Keyword)cSourceStartEndExecAssignment_5_0.eContents().get(0);
		private final Assignment cSourceStartExecAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final Keyword cSourceStartExecSourceStartExecKeyword_5_1_0 = (Keyword)cSourceStartExecAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cAlternatives_5.eContents().get(2);
		private final Assignment cSourceEndExecAssignment_5_2_0 = (Assignment)cGroup_5_2.eContents().get(0);
		private final Keyword cSourceEndExecSourceEndExecKeyword_5_2_0_0 = (Keyword)cSourceEndExecAssignment_5_2_0.eContents().get(0);
		private final Assignment cSourceEndExecCountAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cSourceEndExecCountINT_GREATER_ZEROTerminalRuleCall_5_2_1_0 = (RuleCall)cSourceEndExecCountAssignment_5_2_1.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cTargetStartEndExecAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final Keyword cTargetStartEndExecTargetStartEndExecKeyword_6_0_0 = (Keyword)cTargetStartEndExecAssignment_6_0.eContents().get(0);
		private final Assignment cTargetStartExecAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final Keyword cTargetStartExecTargetStartExecKeyword_6_1_0 = (Keyword)cTargetStartExecAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cAlternatives_6.eContents().get(2);
		private final Assignment cTargetEndExecAssignment_6_2_0 = (Assignment)cGroup_6_2.eContents().get(0);
		private final Keyword cTargetEndExecTargetEndExecKeyword_6_2_0_0 = (Keyword)cTargetEndExecAssignment_6_2_0.eContents().get(0);
		private final Assignment cTargetEndExecCountAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cTargetEndExecCountINT_GREATER_ZEROTerminalRuleCall_6_2_1_0 = (RuleCall)cTargetEndExecCountAssignment_6_2_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSourceNoteKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSourceNoteAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSourceNoteSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cSourceNoteAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cTargetNoteKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTargetNoteAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTargetNoteSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cTargetNoteAssignment_8_1.eContents().get(0);
		
		//TwoLifelineMessage:
		//	sourceLifeline=[Lifeline] messageType=MessageType message=STRING "to" targetLifeline=[Lifeline]
		//	(sourceStartEndExec?="sourceStartEndExec" | sourceStartExec?="sourceStartExec" | sourceEndExec?="sourceEndExec"
		//	sourceEndExecCount=INT_GREATER_ZERO?)? (targetStartEndExec?="targetStartEndExec" | targetStartExec?="targetStartExec"
		//	| targetEndExec?="targetEndExec" targetEndExecCount=INT_GREATER_ZERO?)? ("sourceNote" sourceNote=STRING)?
		//	("targetNote" targetNote=STRING)?;
		public ParserRule getRule() { return rule; }

		//sourceLifeline=[Lifeline] messageType=MessageType message=STRING "to" targetLifeline=[Lifeline]
		//(sourceStartEndExec?="sourceStartEndExec" | sourceStartExec?="sourceStartExec" | sourceEndExec?="sourceEndExec"
		//sourceEndExecCount=INT_GREATER_ZERO?)? (targetStartEndExec?="targetStartEndExec" | targetStartExec?="targetStartExec" |
		//targetEndExec?="targetEndExec" targetEndExecCount=INT_GREATER_ZERO?)? ("sourceNote" sourceNote=STRING)? ("targetNote"
		//targetNote=STRING)?
		public Group getGroup() { return cGroup; }

		//sourceLifeline=[Lifeline]
		public Assignment getSourceLifelineAssignment_0() { return cSourceLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getSourceLifelineLifelineCrossReference_0_0() { return cSourceLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getSourceLifelineLifelineIDTerminalRuleCall_0_0_1() { return cSourceLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//messageType=MessageType
		public Assignment getMessageTypeAssignment_1() { return cMessageTypeAssignment_1; }

		//MessageType
		public RuleCall getMessageTypeMessageTypeEnumRuleCall_1_0() { return cMessageTypeMessageTypeEnumRuleCall_1_0; }

		//message=STRING
		public Assignment getMessageAssignment_2() { return cMessageAssignment_2; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_2_0() { return cMessageSTRINGTerminalRuleCall_2_0; }

		//"to"
		public Keyword getToKeyword_3() { return cToKeyword_3; }

		//targetLifeline=[Lifeline]
		public Assignment getTargetLifelineAssignment_4() { return cTargetLifelineAssignment_4; }

		//[Lifeline]
		public CrossReference getTargetLifelineLifelineCrossReference_4_0() { return cTargetLifelineLifelineCrossReference_4_0; }

		//ID
		public RuleCall getTargetLifelineLifelineIDTerminalRuleCall_4_0_1() { return cTargetLifelineLifelineIDTerminalRuleCall_4_0_1; }

		//(sourceStartEndExec?="sourceStartEndExec" | sourceStartExec?="sourceStartExec" | sourceEndExec?="sourceEndExec"
		//sourceEndExecCount=INT_GREATER_ZERO?)?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//sourceStartEndExec?="sourceStartEndExec"
		public Assignment getSourceStartEndExecAssignment_5_0() { return cSourceStartEndExecAssignment_5_0; }

		//"sourceStartEndExec"
		public Keyword getSourceStartEndExecSourceStartEndExecKeyword_5_0_0() { return cSourceStartEndExecSourceStartEndExecKeyword_5_0_0; }

		//sourceStartExec?="sourceStartExec"
		public Assignment getSourceStartExecAssignment_5_1() { return cSourceStartExecAssignment_5_1; }

		//"sourceStartExec"
		public Keyword getSourceStartExecSourceStartExecKeyword_5_1_0() { return cSourceStartExecSourceStartExecKeyword_5_1_0; }

		//sourceEndExec?="sourceEndExec" sourceEndExecCount=INT_GREATER_ZERO?
		public Group getGroup_5_2() { return cGroup_5_2; }

		//sourceEndExec?="sourceEndExec"
		public Assignment getSourceEndExecAssignment_5_2_0() { return cSourceEndExecAssignment_5_2_0; }

		//"sourceEndExec"
		public Keyword getSourceEndExecSourceEndExecKeyword_5_2_0_0() { return cSourceEndExecSourceEndExecKeyword_5_2_0_0; }

		//sourceEndExecCount=INT_GREATER_ZERO?
		public Assignment getSourceEndExecCountAssignment_5_2_1() { return cSourceEndExecCountAssignment_5_2_1; }

		//INT_GREATER_ZERO
		public RuleCall getSourceEndExecCountINT_GREATER_ZEROTerminalRuleCall_5_2_1_0() { return cSourceEndExecCountINT_GREATER_ZEROTerminalRuleCall_5_2_1_0; }

		//(targetStartEndExec?="targetStartEndExec" | targetStartExec?="targetStartExec" | targetEndExec?="targetEndExec"
		//targetEndExecCount=INT_GREATER_ZERO?)?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//targetStartEndExec?="targetStartEndExec"
		public Assignment getTargetStartEndExecAssignment_6_0() { return cTargetStartEndExecAssignment_6_0; }

		//"targetStartEndExec"
		public Keyword getTargetStartEndExecTargetStartEndExecKeyword_6_0_0() { return cTargetStartEndExecTargetStartEndExecKeyword_6_0_0; }

		//targetStartExec?="targetStartExec"
		public Assignment getTargetStartExecAssignment_6_1() { return cTargetStartExecAssignment_6_1; }

		//"targetStartExec"
		public Keyword getTargetStartExecTargetStartExecKeyword_6_1_0() { return cTargetStartExecTargetStartExecKeyword_6_1_0; }

		//targetEndExec?="targetEndExec" targetEndExecCount=INT_GREATER_ZERO?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//targetEndExec?="targetEndExec"
		public Assignment getTargetEndExecAssignment_6_2_0() { return cTargetEndExecAssignment_6_2_0; }

		//"targetEndExec"
		public Keyword getTargetEndExecTargetEndExecKeyword_6_2_0_0() { return cTargetEndExecTargetEndExecKeyword_6_2_0_0; }

		//targetEndExecCount=INT_GREATER_ZERO?
		public Assignment getTargetEndExecCountAssignment_6_2_1() { return cTargetEndExecCountAssignment_6_2_1; }

		//INT_GREATER_ZERO
		public RuleCall getTargetEndExecCountINT_GREATER_ZEROTerminalRuleCall_6_2_1_0() { return cTargetEndExecCountINT_GREATER_ZEROTerminalRuleCall_6_2_1_0; }

		//("sourceNote" sourceNote=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"sourceNote"
		public Keyword getSourceNoteKeyword_7_0() { return cSourceNoteKeyword_7_0; }

		//sourceNote=STRING
		public Assignment getSourceNoteAssignment_7_1() { return cSourceNoteAssignment_7_1; }

		//STRING
		public RuleCall getSourceNoteSTRINGTerminalRuleCall_7_1_0() { return cSourceNoteSTRINGTerminalRuleCall_7_1_0; }

		//("targetNote" targetNote=STRING)?
		public Group getGroup_8() { return cGroup_8; }

		//"targetNote"
		public Keyword getTargetNoteKeyword_8_0() { return cTargetNoteKeyword_8_0; }

		//targetNote=STRING
		public Assignment getTargetNoteAssignment_8_1() { return cTargetNoteAssignment_8_1; }

		//STRING
		public RuleCall getTargetNoteSTRINGTerminalRuleCall_8_1_0() { return cTargetNoteSTRINGTerminalRuleCall_8_1_0; }
	}

	public class OneLifelineMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OneLifelineMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLifelineLifelineCrossReference_0_0 = (CrossReference)cLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Assignment cMessageTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMessageTypeMessageTypeEnumRuleCall_1_0 = (RuleCall)cMessageTypeAssignment_1.eContents().get(0);
		private final Assignment cMessageTypeLostAndFoundAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cMessageTypeLostAndFoundAlternatives_2_0 = (Alternatives)cMessageTypeLostAndFoundAssignment_2.eContents().get(0);
		private final Keyword cMessageTypeLostAndFoundLostKeyword_2_0_0 = (Keyword)cMessageTypeLostAndFoundAlternatives_2_0.eContents().get(0);
		private final Keyword cMessageTypeLostAndFoundFoundKeyword_2_0_1 = (Keyword)cMessageTypeLostAndFoundAlternatives_2_0.eContents().get(1);
		private final Assignment cMessageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessageSTRINGTerminalRuleCall_3_0 = (RuleCall)cMessageAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cStartEndExecAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final Keyword cStartEndExecStartEndExecKeyword_4_0_0 = (Keyword)cStartEndExecAssignment_4_0.eContents().get(0);
		private final Assignment cStartExecAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final Keyword cStartExecStartExecKeyword_4_1_0 = (Keyword)cStartExecAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cAlternatives_4.eContents().get(2);
		private final Assignment cEndExecAssignment_4_2_0 = (Assignment)cGroup_4_2.eContents().get(0);
		private final Keyword cEndExecEndExecKeyword_4_2_0_0 = (Keyword)cEndExecAssignment_4_2_0.eContents().get(0);
		private final Assignment cEndExecCountAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cEndExecCountINT_GREATER_ZEROTerminalRuleCall_4_2_1_0 = (RuleCall)cEndExecCountAssignment_4_2_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNoteKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNoteAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNoteSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cNoteAssignment_5_1.eContents().get(0);
		
		//OneLifelineMessage:
		//	Lifeline=[Lifeline] messageType=MessageType messageTypeLostAndFound=("lost" | "found") message=STRING
		//	(startEndExec?="startEndExec" | startExec?="startExec" | endExec?="endExec" endExecCount=INT_GREATER_ZERO?)? ("note"
		//	note=STRING)?;
		public ParserRule getRule() { return rule; }

		//Lifeline=[Lifeline] messageType=MessageType messageTypeLostAndFound=("lost" | "found") message=STRING
		//(startEndExec?="startEndExec" | startExec?="startExec" | endExec?="endExec" endExecCount=INT_GREATER_ZERO?)? ("note"
		//note=STRING)?
		public Group getGroup() { return cGroup; }

		//Lifeline=[Lifeline]
		public Assignment getLifelineAssignment_0() { return cLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getLifelineLifelineCrossReference_0_0() { return cLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getLifelineLifelineIDTerminalRuleCall_0_0_1() { return cLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//messageType=MessageType
		public Assignment getMessageTypeAssignment_1() { return cMessageTypeAssignment_1; }

		//MessageType
		public RuleCall getMessageTypeMessageTypeEnumRuleCall_1_0() { return cMessageTypeMessageTypeEnumRuleCall_1_0; }

		//messageTypeLostAndFound=("lost" | "found")
		public Assignment getMessageTypeLostAndFoundAssignment_2() { return cMessageTypeLostAndFoundAssignment_2; }

		//"lost" | "found"
		public Alternatives getMessageTypeLostAndFoundAlternatives_2_0() { return cMessageTypeLostAndFoundAlternatives_2_0; }

		//"lost"
		public Keyword getMessageTypeLostAndFoundLostKeyword_2_0_0() { return cMessageTypeLostAndFoundLostKeyword_2_0_0; }

		//"found"
		public Keyword getMessageTypeLostAndFoundFoundKeyword_2_0_1() { return cMessageTypeLostAndFoundFoundKeyword_2_0_1; }

		//message=STRING
		public Assignment getMessageAssignment_3() { return cMessageAssignment_3; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_3_0() { return cMessageSTRINGTerminalRuleCall_3_0; }

		//(startEndExec?="startEndExec" | startExec?="startExec" | endExec?="endExec" endExecCount=INT_GREATER_ZERO?)?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//startEndExec?="startEndExec"
		public Assignment getStartEndExecAssignment_4_0() { return cStartEndExecAssignment_4_0; }

		//"startEndExec"
		public Keyword getStartEndExecStartEndExecKeyword_4_0_0() { return cStartEndExecStartEndExecKeyword_4_0_0; }

		//startExec?="startExec"
		public Assignment getStartExecAssignment_4_1() { return cStartExecAssignment_4_1; }

		//"startExec"
		public Keyword getStartExecStartExecKeyword_4_1_0() { return cStartExecStartExecKeyword_4_1_0; }

		//endExec?="endExec" endExecCount=INT_GREATER_ZERO?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//endExec?="endExec"
		public Assignment getEndExecAssignment_4_2_0() { return cEndExecAssignment_4_2_0; }

		//"endExec"
		public Keyword getEndExecEndExecKeyword_4_2_0_0() { return cEndExecEndExecKeyword_4_2_0_0; }

		//endExecCount=INT_GREATER_ZERO?
		public Assignment getEndExecCountAssignment_4_2_1() { return cEndExecCountAssignment_4_2_1; }

		//INT_GREATER_ZERO
		public RuleCall getEndExecCountINT_GREATER_ZEROTerminalRuleCall_4_2_1_0() { return cEndExecCountINT_GREATER_ZEROTerminalRuleCall_4_2_1_0; }

		//("note" note=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"note"
		public Keyword getNoteKeyword_5_0() { return cNoteKeyword_5_0; }

		//note=STRING
		public Assignment getNoteAssignment_5_1() { return cNoteAssignment_5_1; }

		//STRING
		public RuleCall getNoteSTRINGTerminalRuleCall_5_1_0() { return cNoteSTRINGTerminalRuleCall_5_1_0; }
	}

	public class SelfMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SelfMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLifelineLifelineCrossReference_0_0 = (CrossReference)cLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Assignment cMessageTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cMessageTypeAlternatives_1_0 = (Alternatives)cMessageTypeAssignment_1.eContents().get(0);
		private final Keyword cMessageTypeSyncKeyword_1_0_0 = (Keyword)cMessageTypeAlternatives_1_0.eContents().get(0);
		private final Keyword cMessageTypeAsyncKeyword_1_0_1 = (Keyword)cMessageTypeAlternatives_1_0.eContents().get(1);
		private final Keyword cMessageTypeResponseKeyword_1_0_2 = (Keyword)cMessageTypeAlternatives_1_0.eContents().get(2);
		private final Keyword cSelfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMessageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessageSTRINGTerminalRuleCall_3_0 = (RuleCall)cMessageAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cStartEndExecAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final Keyword cStartEndExecStartEndExecKeyword_4_0_0 = (Keyword)cStartEndExecAssignment_4_0.eContents().get(0);
		private final Assignment cStartExecAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final Keyword cStartExecStartExecKeyword_4_1_0 = (Keyword)cStartExecAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cAlternatives_4.eContents().get(2);
		private final Assignment cEndExecAssignment_4_2_0 = (Assignment)cGroup_4_2.eContents().get(0);
		private final Keyword cEndExecEndExecKeyword_4_2_0_0 = (Keyword)cEndExecAssignment_4_2_0.eContents().get(0);
		private final Assignment cEndExecCountAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cEndExecCountINT_GREATER_ZEROTerminalRuleCall_4_2_1_0 = (RuleCall)cEndExecCountAssignment_4_2_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNoteKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNoteAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNoteSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cNoteAssignment_5_1.eContents().get(0);
		
		//SelfMessage:
		//	Lifeline=[Lifeline] messageType=("sync" | "async" | "response") "self" message=STRING (startEndExec?="startEndExec" |
		//	startExec?="startExec" | endExec?="endExec" endExecCount=INT_GREATER_ZERO?)? ("note" note=STRING)?;
		public ParserRule getRule() { return rule; }

		//Lifeline=[Lifeline] messageType=("sync" | "async" | "response") "self" message=STRING (startEndExec?="startEndExec" |
		//startExec?="startExec" | endExec?="endExec" endExecCount=INT_GREATER_ZERO?)? ("note" note=STRING)?
		public Group getGroup() { return cGroup; }

		//Lifeline=[Lifeline]
		public Assignment getLifelineAssignment_0() { return cLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getLifelineLifelineCrossReference_0_0() { return cLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getLifelineLifelineIDTerminalRuleCall_0_0_1() { return cLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//messageType=("sync" | "async" | "response")
		public Assignment getMessageTypeAssignment_1() { return cMessageTypeAssignment_1; }

		//"sync" | "async" | "response"
		public Alternatives getMessageTypeAlternatives_1_0() { return cMessageTypeAlternatives_1_0; }

		//"sync"
		public Keyword getMessageTypeSyncKeyword_1_0_0() { return cMessageTypeSyncKeyword_1_0_0; }

		//"async"
		public Keyword getMessageTypeAsyncKeyword_1_0_1() { return cMessageTypeAsyncKeyword_1_0_1; }

		//"response"
		public Keyword getMessageTypeResponseKeyword_1_0_2() { return cMessageTypeResponseKeyword_1_0_2; }

		//"self"
		public Keyword getSelfKeyword_2() { return cSelfKeyword_2; }

		//message=STRING
		public Assignment getMessageAssignment_3() { return cMessageAssignment_3; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_3_0() { return cMessageSTRINGTerminalRuleCall_3_0; }

		//(startEndExec?="startEndExec" | startExec?="startExec" | endExec?="endExec" endExecCount=INT_GREATER_ZERO?)?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//startEndExec?="startEndExec"
		public Assignment getStartEndExecAssignment_4_0() { return cStartEndExecAssignment_4_0; }

		//"startEndExec"
		public Keyword getStartEndExecStartEndExecKeyword_4_0_0() { return cStartEndExecStartEndExecKeyword_4_0_0; }

		//startExec?="startExec"
		public Assignment getStartExecAssignment_4_1() { return cStartExecAssignment_4_1; }

		//"startExec"
		public Keyword getStartExecStartExecKeyword_4_1_0() { return cStartExecStartExecKeyword_4_1_0; }

		//endExec?="endExec" endExecCount=INT_GREATER_ZERO?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//endExec?="endExec"
		public Assignment getEndExecAssignment_4_2_0() { return cEndExecAssignment_4_2_0; }

		//"endExec"
		public Keyword getEndExecEndExecKeyword_4_2_0_0() { return cEndExecEndExecKeyword_4_2_0_0; }

		//endExecCount=INT_GREATER_ZERO?
		public Assignment getEndExecCountAssignment_4_2_1() { return cEndExecCountAssignment_4_2_1; }

		//INT_GREATER_ZERO
		public RuleCall getEndExecCountINT_GREATER_ZEROTerminalRuleCall_4_2_1_0() { return cEndExecCountINT_GREATER_ZEROTerminalRuleCall_4_2_1_0; }

		//("note" note=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"note"
		public Keyword getNoteKeyword_5_0() { return cNoteKeyword_5_0; }

		//note=STRING
		public Assignment getNoteAssignment_5_1() { return cNoteAssignment_5_1; }

		//STRING
		public RuleCall getNoteSTRINGTerminalRuleCall_5_1_0() { return cNoteSTRINGTerminalRuleCall_5_1_0; }
	}

	public class OneLifelineNoteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OneLifelineNote");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLifelineLifelineCrossReference_0_0 = (CrossReference)cLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Keyword cNoteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNoteAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNoteSTRINGTerminalRuleCall_2_0 = (RuleCall)cNoteAssignment_2.eContents().get(0);
		
		//OneLifelineNote:
		//	Lifeline=[Lifeline] "note" note=STRING;
		public ParserRule getRule() { return rule; }

		//Lifeline=[Lifeline] "note" note=STRING
		public Group getGroup() { return cGroup; }

		//Lifeline=[Lifeline]
		public Assignment getLifelineAssignment_0() { return cLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getLifelineLifelineCrossReference_0_0() { return cLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getLifelineLifelineIDTerminalRuleCall_0_0_1() { return cLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//"note"
		public Keyword getNoteKeyword_1() { return cNoteKeyword_1; }

		//note=STRING
		public Assignment getNoteAssignment_2() { return cNoteAssignment_2; }

		//STRING
		public RuleCall getNoteSTRINGTerminalRuleCall_2_0() { return cNoteSTRINGTerminalRuleCall_2_0; }
	}

	public class DestroyLifelineEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DestroyLifelineEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLifelineLifelineCrossReference_0_0 = (CrossReference)cLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLifelineLifelineIDTerminalRuleCall_0_0_1 = (RuleCall)cLifelineLifelineCrossReference_0_0.eContents().get(1);
		private final Keyword cDestroyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//DestroyLifelineEvent:
		//	Lifeline=[Lifeline] "destroy";
		public ParserRule getRule() { return rule; }

		//Lifeline=[Lifeline] "destroy"
		public Group getGroup() { return cGroup; }

		//Lifeline=[Lifeline]
		public Assignment getLifelineAssignment_0() { return cLifelineAssignment_0; }

		//[Lifeline]
		public CrossReference getLifelineLifelineCrossReference_0_0() { return cLifelineLifelineCrossReference_0_0; }

		//ID
		public RuleCall getLifelineLifelineIDTerminalRuleCall_0_0_1() { return cLifelineLifelineIDTerminalRuleCall_0_0_1; }

		//"destroy"
		public Keyword getDestroyKeyword_1() { return cDestroyKeyword_1; }
	}

	public class FragmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Fragment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFragmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cSectionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSectionsSectionParserRuleCall_2_0 = (RuleCall)cSectionsAssignment_2.eContents().get(0);
		private final Assignment cSectionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSectionsSectionParserRuleCall_3_0 = (RuleCall)cSectionsAssignment_3.eContents().get(0);
		
		//Fragment:
		//	"fragment" name=STRING sections+=Section sections+=Section*;
		public ParserRule getRule() { return rule; }

		//"fragment" name=STRING sections+=Section sections+=Section*
		public Group getGroup() { return cGroup; }

		//"fragment"
		public Keyword getFragmentKeyword_0() { return cFragmentKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_2() { return cSectionsAssignment_2; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_2_0() { return cSectionsSectionParserRuleCall_2_0; }

		//sections+=Section*
		public Assignment getSectionsAssignment_3() { return cSectionsAssignment_3; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_3_0() { return cSectionsSectionParserRuleCall_3_0; }
	}

	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLabelKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLabelAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLabelSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cLabelAssignment_1_1.eContents().get(0);
		private final Assignment cInteractionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInteractionsInteractionParserRuleCall_2_0 = (RuleCall)cInteractionsAssignment_2.eContents().get(0);
		private final Assignment cInteractionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteractionsInteractionParserRuleCall_3_0 = (RuleCall)cInteractionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Section:
		//	"{" ("label" label=STRING)? interactions+=Interaction interactions+=Interaction* "}";
		public ParserRule getRule() { return rule; }

		//"{" ("label" label=STRING)? interactions+=Interaction interactions+=Interaction* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//("label" label=STRING)?
		public Group getGroup_1() { return cGroup_1; }

		//"label"
		public Keyword getLabelKeyword_1_0() { return cLabelKeyword_1_0; }

		//label=STRING
		public Assignment getLabelAssignment_1_1() { return cLabelAssignment_1_1; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_1_1_0() { return cLabelSTRINGTerminalRuleCall_1_1_0; }

		//interactions+=Interaction
		public Assignment getInteractionsAssignment_2() { return cInteractionsAssignment_2; }

		//Interaction
		public RuleCall getInteractionsInteractionParserRuleCall_2_0() { return cInteractionsInteractionParserRuleCall_2_0; }

		//interactions+=Interaction*
		public Assignment getInteractionsAssignment_3() { return cInteractionsAssignment_3; }

		//Interaction
		public RuleCall getInteractionsInteractionParserRuleCall_3_0() { return cInteractionsInteractionParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RefinementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Refinement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefinementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLabelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelSTRINGTerminalRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		private final Keyword cLifelinesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLifelinesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cLifelinesLifelineCrossReference_4_0 = (CrossReference)cLifelinesAssignment_4.eContents().get(0);
		private final RuleCall cLifelinesLifelineIDTerminalRuleCall_4_0_1 = (RuleCall)cLifelinesLifelineCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLifelinesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cLifelinesLifelineCrossReference_5_1_0 = (CrossReference)cLifelinesAssignment_5_1.eContents().get(0);
		private final RuleCall cLifelinesLifelineIDTerminalRuleCall_5_1_0_1 = (RuleCall)cLifelinesLifelineCrossReference_5_1_0.eContents().get(1);
		
		//Refinement:
		//	"refinement" "label" label=STRING "lifelines" lifelines+=[Lifeline] ("," lifelines+=[Lifeline])*;
		public ParserRule getRule() { return rule; }

		//"refinement" "label" label=STRING "lifelines" lifelines+=[Lifeline] ("," lifelines+=[Lifeline])*
		public Group getGroup() { return cGroup; }

		//"refinement"
		public Keyword getRefinementKeyword_0() { return cRefinementKeyword_0; }

		//"label"
		public Keyword getLabelKeyword_1() { return cLabelKeyword_1; }

		//label=STRING
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_2_0() { return cLabelSTRINGTerminalRuleCall_2_0; }

		//"lifelines"
		public Keyword getLifelinesKeyword_3() { return cLifelinesKeyword_3; }

		//lifelines+=[Lifeline]
		public Assignment getLifelinesAssignment_4() { return cLifelinesAssignment_4; }

		//[Lifeline]
		public CrossReference getLifelinesLifelineCrossReference_4_0() { return cLifelinesLifelineCrossReference_4_0; }

		//ID
		public RuleCall getLifelinesLifelineIDTerminalRuleCall_4_0_1() { return cLifelinesLifelineIDTerminalRuleCall_4_0_1; }

		//("," lifelines+=[Lifeline])*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//lifelines+=[Lifeline]
		public Assignment getLifelinesAssignment_5_1() { return cLifelinesAssignment_5_1; }

		//[Lifeline]
		public CrossReference getLifelinesLifelineCrossReference_5_1_0() { return cLifelinesLifelineCrossReference_5_1_0; }

		//ID
		public RuleCall getLifelinesLifelineIDTerminalRuleCall_5_1_0_1() { return cLifelinesLifelineIDTerminalRuleCall_5_1_0_1; }
	}
	
	
	public class MessageTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "MessageType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAsyncEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAsyncAsyncKeyword_0_0 = (Keyword)cAsyncEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCreateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCreateCreateKeyword_1_0 = (Keyword)cCreateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cResponseEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cResponseResponseKeyword_2_0 = (Keyword)cResponseEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSyncEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSyncSyncKeyword_3_0 = (Keyword)cSyncEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum MessageType:
		//	async | create | response | sync;
		public EnumRule getRule() { return rule; }

		//async | create | response | sync
		public Alternatives getAlternatives() { return cAlternatives; }

		//async
		public EnumLiteralDeclaration getAsyncEnumLiteralDeclaration_0() { return cAsyncEnumLiteralDeclaration_0; }

		//"async"
		public Keyword getAsyncAsyncKeyword_0_0() { return cAsyncAsyncKeyword_0_0; }

		//create
		public EnumLiteralDeclaration getCreateEnumLiteralDeclaration_1() { return cCreateEnumLiteralDeclaration_1; }

		//"create"
		public Keyword getCreateCreateKeyword_1_0() { return cCreateCreateKeyword_1_0; }

		//response
		public EnumLiteralDeclaration getResponseEnumLiteralDeclaration_2() { return cResponseEnumLiteralDeclaration_2; }

		//"response"
		public Keyword getResponseResponseKeyword_2_0() { return cResponseResponseKeyword_2_0; }

		//sync
		public EnumLiteralDeclaration getSyncEnumLiteralDeclaration_3() { return cSyncEnumLiteralDeclaration_3; }

		//"sync"
		public Keyword getSyncSyncKeyword_3_0() { return cSyncSyncKeyword_3_0; }
	}
	
	private final SequenceDiagramElements pSequenceDiagram;
	private final LifelineElements pLifeline;
	private final InteractionElements pInteraction;
	private final TwoLifelineMessageElements pTwoLifelineMessage;
	private final OneLifelineMessageElements pOneLifelineMessage;
	private final SelfMessageElements pSelfMessage;
	private final OneLifelineNoteElements pOneLifelineNote;
	private final DestroyLifelineEventElements pDestroyLifelineEvent;
	private final FragmentElements pFragment;
	private final SectionElements pSection;
	private final RefinementElements pRefinement;
	private final MessageTypeElements unknownRuleMessageType;
	private final TerminalRule tINT_GREATER_ZERO;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SequenceGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSequenceDiagram = new SequenceDiagramElements();
		this.pLifeline = new LifelineElements();
		this.pInteraction = new InteractionElements();
		this.pTwoLifelineMessage = new TwoLifelineMessageElements();
		this.pOneLifelineMessage = new OneLifelineMessageElements();
		this.pSelfMessage = new SelfMessageElements();
		this.pOneLifelineNote = new OneLifelineNoteElements();
		this.pDestroyLifelineEvent = new DestroyLifelineEventElements();
		this.pFragment = new FragmentElements();
		this.pSection = new SectionElements();
		this.pRefinement = new RefinementElements();
		this.unknownRuleMessageType = new MessageTypeElements();
		this.tINT_GREATER_ZERO = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT_GREATER_ZERO");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cau.cs.kieler.uml.sequence.text.Sequence".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//SequenceDiagram:
	//	{SequenceDiagram} "sequenceDiagram" diagramName= //('{' locals+=LocalVariable (locals+=LocalVariable)* '}')?
	//	STRING lifelines+=Lifeline* interactions+=Interaction*;
	public SequenceDiagramElements getSequenceDiagramAccess() {
		return pSequenceDiagram;
	}
	
	public ParserRule getSequenceDiagramRule() {
		return getSequenceDiagramAccess().getRule();
	}

	////LocalVariable returns LocalVariable:
	////    type=DataType name=ID;
	//Lifeline:
	//	"lifeline" caption=STRING "as" name=ID | "usecase" usecaseCaption=STRING "as" name=ID;
	public LifelineElements getLifelineAccess() {
		return pLifeline;
	}
	
	public ParserRule getLifelineRule() {
		return getLifelineAccess().getRule();
	}

	//Interaction:
	//	TwoLifelineMessage | OneLifelineMessage | Fragment | OneLifelineNote | SelfMessage | DestroyLifelineEvent |
	//	Refinement;
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}

	//TwoLifelineMessage:
	//	sourceLifeline=[Lifeline] messageType=MessageType message=STRING "to" targetLifeline=[Lifeline]
	//	(sourceStartEndExec?="sourceStartEndExec" | sourceStartExec?="sourceStartExec" | sourceEndExec?="sourceEndExec"
	//	sourceEndExecCount=INT_GREATER_ZERO?)? (targetStartEndExec?="targetStartEndExec" | targetStartExec?="targetStartExec"
	//	| targetEndExec?="targetEndExec" targetEndExecCount=INT_GREATER_ZERO?)? ("sourceNote" sourceNote=STRING)?
	//	("targetNote" targetNote=STRING)?;
	public TwoLifelineMessageElements getTwoLifelineMessageAccess() {
		return pTwoLifelineMessage;
	}
	
	public ParserRule getTwoLifelineMessageRule() {
		return getTwoLifelineMessageAccess().getRule();
	}

	//OneLifelineMessage:
	//	Lifeline=[Lifeline] messageType=MessageType messageTypeLostAndFound=("lost" | "found") message=STRING
	//	(startEndExec?="startEndExec" | startExec?="startExec" | endExec?="endExec" endExecCount=INT_GREATER_ZERO?)? ("note"
	//	note=STRING)?;
	public OneLifelineMessageElements getOneLifelineMessageAccess() {
		return pOneLifelineMessage;
	}
	
	public ParserRule getOneLifelineMessageRule() {
		return getOneLifelineMessageAccess().getRule();
	}

	//SelfMessage:
	//	Lifeline=[Lifeline] messageType=("sync" | "async" | "response") "self" message=STRING (startEndExec?="startEndExec" |
	//	startExec?="startExec" | endExec?="endExec" endExecCount=INT_GREATER_ZERO?)? ("note" note=STRING)?;
	public SelfMessageElements getSelfMessageAccess() {
		return pSelfMessage;
	}
	
	public ParserRule getSelfMessageRule() {
		return getSelfMessageAccess().getRule();
	}

	//OneLifelineNote:
	//	Lifeline=[Lifeline] "note" note=STRING;
	public OneLifelineNoteElements getOneLifelineNoteAccess() {
		return pOneLifelineNote;
	}
	
	public ParserRule getOneLifelineNoteRule() {
		return getOneLifelineNoteAccess().getRule();
	}

	//DestroyLifelineEvent:
	//	Lifeline=[Lifeline] "destroy";
	public DestroyLifelineEventElements getDestroyLifelineEventAccess() {
		return pDestroyLifelineEvent;
	}
	
	public ParserRule getDestroyLifelineEventRule() {
		return getDestroyLifelineEventAccess().getRule();
	}

	//Fragment:
	//	"fragment" name=STRING sections+=Section sections+=Section*;
	public FragmentElements getFragmentAccess() {
		return pFragment;
	}
	
	public ParserRule getFragmentRule() {
		return getFragmentAccess().getRule();
	}

	//Section:
	//	"{" ("label" label=STRING)? interactions+=Interaction interactions+=Interaction* "}";
	public SectionElements getSectionAccess() {
		return pSection;
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}

	//Refinement:
	//	"refinement" "label" label=STRING "lifelines" lifelines+=[Lifeline] ("," lifelines+=[Lifeline])*;
	public RefinementElements getRefinementAccess() {
		return pRefinement;
	}
	
	public ParserRule getRefinementRule() {
		return getRefinementAccess().getRule();
	}

	//enum MessageType:
	//	async | create | response | sync;
	public MessageTypeElements getMessageTypeAccess() {
		return unknownRuleMessageType;
	}
	
	public EnumRule getMessageTypeRule() {
		return getMessageTypeAccess().getRule();
	}

	////enum DataType:
	////    char='Char' | boolean='Boolean' | integer='Integer' | float='Float';
	//terminal INT_GREATER_ZERO returns ecore::EInt:
	//	"1".."9" "0".."9"* | "all";
	public TerminalRule getINT_GREATER_ZERORule() {
		return tINT_GREATER_ZERO;
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
