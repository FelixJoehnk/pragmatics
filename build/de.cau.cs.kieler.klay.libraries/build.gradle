/**
 * Gradle script for building and publishing Klay as bundled jar with and without dependencies.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

allprojects {
    group = 'de.cau.cs.kieler'
    ext.packaging = 'jar'
    version = project.properties['v'] ?: 'NIGHTLY-' + getTimeStamp()

    task hello << { task ->
        println "Hello, I'm $task.project.name"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'maven'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
    }

// lib jars -----------------------------------------------

    jar { afterEvaluate {project ->
        // println "$project.projectBaseName"
        baseName = project.projectBaseName
        from project.sourceSets.main.output
    }}

// source jars --------------------------------------------

    task sourcesJar (type: Jar) { afterEvaluate {project ->
        baseName = project.projectBaseName
        classifier = 'sources'
        from project.sourceSets.main.allSource
    }}


// javadoc ------------------------------------------------

    task javadoc (type: Javadoc, overwrite: true) { afterEvaluate {project ->
        source = project.sourceSets.main.allJava
        failOnError = false
    }}

    // javadoc jars -------------------------------------------

    task javadocJar (type: Jar, dependsOn: javadoc) { afterEvaluate {project ->
        baseName = project.projectBaseName
        classifier = 'javadoc'
        from javadoc.destinationDir
    }}

// fat jars -----------------------------------------------

    shadowJar { afterEvaluate {project ->
        baseName = project.projectBaseName
        from project.sourceSets.main.runtimeClasspath
        from "../epl-v10.html"
        include '**/*.class'
        include '**/*.jar'
        include 'META-INF/MAINFEST.MF'
        include 'epl-v10.html'
        exclude 'javax/**'
    }}

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                afterEvaluate {project ->
                    repository(url: "file://${project.rootProject.buildDir}/repo") {
                      // authentication(userName: sonatypeUsername, password: sonatypePassword)
                    }
                    pom.project {
                        name project.pomName
                        packaging 'jar'
                        description project.pomDescr
                        url 'http://rtsys.informatik.uni-kiel.de'

                        licenses {
                            license {
                                name 'Eclipse Public License - v 1.0'
                                url 'http://www.eclipse.org/org/documents/epl-v10.html'
                            }
                        }
                    }
                }
            }
        }
    }
}

// // lib jars -----------------------------------------------

// jar {
//     baseName = projectBaseName
//     from sourceSets.find{it.name == projectName}.output
// }

// // source jars --------------------------------------------

// task sourcesJar (type: Jar) {
//     baseName = projectBaseName
//     classifier = 'sources'
//     from sourceSets.find{it.name == projectName}.allSource
// }

// // javadoc ------------------------------------------------

// task javadoc (type: Javadoc, overwrite: true) {
//     source = sourceSets.find{it.name == projectName}.allJava
//     failOnError = false
// }

// // javadoc jars -------------------------------------------

// task javadocJar (type: Jar, dependsOn: javadoc) {
//     baseName = projectBaseName
//     classifier = 'javadoc'
//     from javadoc.destinationDir
// }

// // fat jars -----------------------------------------------

// shadowJar {
//     baseName = projectBaseName
//     from sourceSets.find{it.name == projectName}.runtimeClasspath
//     from "epl-v10.html"
//     include '**/*.class'
//     include '**/*.jar'
//     include 'META-INF/MAINFEST.MF'
//     include 'epl-v10.html'
//     exclude 'javax/**'
// }

// artifacts {
//     archives jar
//     archives sourcesJar
//     archives javadocJar
// }

// signing {
//     sign configurations.archives
// }

// uploadArchives {
//     repositories {
//         mavenDeployer {
//             beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

//             repository(url: "file://$buildDir/repo") {
//               // authentication(userName: sonatypeUsername, password: sonatypePassword)
//             }

//             pom.project {
//                 name 'KlayBundle'
//                 packaging 'jar'
//                 description 'Bundled Standalone Klay'
//                 url 'http://rtsys.informatik.uni-kiel.de'

//                 licenses {
//                     license {
//                         name 'Eclipse Public License - v 1.0'
//                         url 'http://www.eclipse.org/org/documents/epl-v10.html'
//                     }
//                 }
//             }
//         }
//     }
// }

def getTimeStamp() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}
